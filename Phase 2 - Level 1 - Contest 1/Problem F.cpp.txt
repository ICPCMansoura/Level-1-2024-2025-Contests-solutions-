#include <bits/stdc++.h>

using namespace std;

#define Sonic ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define int long long

const int mod = 1e9 + 7;

void palmer() {
    int n, k; cin >> n >> k;
    vector<int> powersOfTwo;
    for (int i = 1; i <= 1e9; i *= 2) {
        powersOfTwo.push_back(i);
    }
    auto it = upper_bound(powersOfTwo.begin(), powersOfTwo.end(), n);
    it--;
    int idx = it - powersOfTwo.begin();
    priority_queue<int> ans;
    for (int i = idx; i >= 0; i--) {
        if (powersOfTwo[i] <= n) {
            n -= powersOfTwo[i];
            ans.push(powersOfTwo[i]);
        }
    }
    while (ans.size() < k) {
        int x = ans.top();
        if (x == 1)
            break;

        ans.pop();
        ans.push(x / 2);
        ans.push(x / 2);
    }
    if (ans.size() == k) {
        cout << "YES\n";
        while (!ans.empty()) {
            cout << ans.top() << " ";
            ans.pop();
        }
    }
    else {
        cout << "NO\n";
    }
}

signed main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
    Sonic
    int t = 1; //cin >> t;
    while (t--){
        palmer();
        if (t > 0)
            cout << "\n";
    }
}