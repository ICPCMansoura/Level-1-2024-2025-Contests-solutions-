#include <iostream>
#include <vector>
#include <bitset>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <string>
#include <cmath>
#include <iomanip>
#include <unordered_map>
#include<numeric>
using namespace std;
#define int long long
#define endl '\n'
const int mod = 1e9 + 7, N = 1e5 + 5;
vector<vector<int>>adj;
vector<int>vis;
int getDivisors(int n) {    // O(sqrt(n))
	int sum = 0;
	for (int i = 1; i * i <= n; i++) {
		if (n % i == 0) {
			sum += i;
			if (i != 1 && i * i != n) sum += n / i;
		}
	}
	return sum;
}
void Magek() {
	int n; cin >> n;
	int sum = getDivisors(n);
	if (sum > n) {
		cout << "abundant" << endl;
	}
	else if (sum < n || n==1) {
		cout << "deficient" << endl;
	}
	else {
		cout << "perfect" << endl;
	}
}
signed main() {

	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);

	int t = 1;
	cin >> t;
	while (t--) {
		Magek();
	}

	return 0;
}