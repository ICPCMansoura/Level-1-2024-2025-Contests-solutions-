#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
 
#define ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
#define ordered_set2 tree<int, null_type, greater_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
 
 
#define int long long
#define ll long long
#define all(x) x.begin(), x.end()
 
#define fast ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);



int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

int a, b, c;
bool f;
int ans;

void bfs(){
    f = 1;
    ans = 0;
    queue <pair <int, int>> q;
    if(a){
        q.push({2, 0});
        a -- ;
    }
    else if(b){
        q.push({1, 0});
        b--;
    }
    else{
        q.push({0, 0});
        c--;
    }


    while(!q.empty()){
        int type = q.front().first, l = q.front().second;
        q.pop();
        ans = max(ans, l);

        for(int i = 0; i < type; i++){
            if(a){
                a--;
                q.push({2, l+1});
            }
            else if (b){
                b--;
                q.push({1, l+1});
            }
            else if(c){
                c--;
                q.push({0, l+1});
            }
            else {
                f = 0;
                return;
            }
        }        
    }
}


void solve() {
    cin >> a >> b >> c;
    bfs();
    if(f && a == 0 && b == 0 && c == 0){
        cout << ans << endl;
    }
    else{
        cout << -1 << endl;
    }
}

signed main() {
    fast
    int T = 1;
    cin >> T;
    while(T--){
        solve();

    }
    return 0;
}